name: Benchmark Redis vs KeyDB

on:
  workflow_dispatch:
    branches: [master]
  push:
    branches:
      - master
    paths-ignore:
      - '.gitignore'
      - 'readme.txt'
      - 'readme.md'

jobs:
  benchmark:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: System Info
      run: |
        echo "==== CPU Info ===="
        lscpu
    
        echo "==== Memory Info ===="
        free -m
    
        echo "==== Disk Info ===="
        df -hT

    - name: Generate TLS Certificates
      run: |
        openssl genpkey -algorithm RSA -pkeyopt rsa_keygen_bits:2048 -out test.key
        openssl req -new -x509 -days 365 -key test.key -out test.crt -subj "/C=US/ST=Some-State/O=OrganizationName/OU=OrganizationalUnit/CN=test.com"
        cp test.crt ca.crt

    - name: Update Redis Configuration for TLS
      run: |
        echo "tls-port 6390" >> redis-tls.conf
        echo "tls-cert-file /tls/test.crt" >> redis-tls.conf
        echo "tls-key-file /tls/test.key" >> redis-tls.conf
        echo "tls-ca-cert-file /tls/ca.crt" >> redis-tls.conf
    
    - name: Update KeyDB Configuration for TLS
      run: |
        echo "tls-port 6391" >> keydb-tls.conf
        echo "tls-cert-file /tls/test.crt" >> keydb-tls.conf
        echo "tls-key-file /tls/test.key" >> keydb-tls.conf
        echo "tls-ca-cert-file /tls/ca.crt" >> keydb-tls.conf
    
    - name: Update Dragonfly Configuration for TLS
      run: |
        echo "tls-port 6392" >> dragonfly-tls.conf
        echo "tls-cert-file /tls/test.crt" >> dragonfly-tls.conf
        echo "tls-key-file /tls/test.key" >> dragonfly-tls.conf
        echo "tls-ca-cert-file /tls/ca.crt" >> dragonfly-tls.conf

    - name: Build Redis Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile-redis
        load: true
        tags: redis:latest

    - name: Build KeyDB Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile-keydb
        load: true
        tags: keydb:latest

    - name: Build Dragonfly Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile-dragonfly
        load: true
        tags: dragonfly:latest

    - name: Build Redis Docker image with TLS
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile-redis-tls
        load: true
        tags: redis-tls:latest
    
    - name: Build KeyDB Docker image with TLS
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile-keydb-tls
        load: true
        tags: keydb-tls:latest
    
    - name: Build Dragonfly Docker image with TLS
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile-dragonfly-tls
        load: true
        tags: dragonfly-tls:latest

    - name: Run Redis container
      run: |
        docker run -d --name redis -p 6379:6379 redis:latest
        sleep 20

    - name: Run KeyDB container
      run: |
        docker run -d --name keydb -p 6380:6379 keydb:latest
        sleep 20

    - name: Run Dragonfly container
      run: |
        docker run -d --name dragonfly -p 6381:6379 dragonfly:latest
        sleep 20

    - name: Run Redis container with TLS
      run: |
        docker run -d --name redis-tls -p 6390:6390 redis-tls:latest
        sleep 20
    
    - name: Run KeyDB container with TLS
      run: |
        docker run -d --name keydb-tls -p 6391:6391 keydb-tls:latest
        sleep 20
    
    - name: Run Dragonfly container with TLS
      run: |
        docker run -d --name dragonfly-tls -p 6392:6392 dragonfly-tls:latest
        sleep 20

    - name: Check Redis logs
      run: docker logs redis

    # - name: Check Redis config
    #   run: |
    #     docker exec redis ls -lAh /etc/redis/
    
    - name: Test Redis Connectivity
      run: docker exec redis redis-cli -h 127.0.0.1 -p 6379 PING

    - name: Check KeyDB logs
      run: docker logs keydb

    # - name: Check KeyDB config
    #   run: |
    #     docker exec keydb ls -lAh /etc/keydb/
    
    - name: Test KeyDB Connectivity
      run: docker exec keydb keydb-cli -h 127.0.0.1 -p 6379 PING

    - name: Check Dragonfly logs
      run: docker logs dragonfly

    # - name: Check Dragonfly config
    #   run: |
    #     docker exec dragonfly ls -lAh /etc/dragonfly/
    
    - name: Test Dragonfly Connectivity
      run: docker exec dragonfly redis-cli -h 127.0.0.1 -p 6379 PING

    - name: Check Redis TLS logs
      run: docker logs redis-tls

    # - name: Check Redis TLS config
    #   run: |
    #     docker exec redis-tls ls -lAh /usr/local/etc/redis/
    
    - name: Test Redis TLS Connectivity
      run: docker exec redis-tls redis-cli -h 127.0.0.1 -p 6390 --tls --cert /tls/test.crt --key /tls/test.key --cacert /tls/ca.crt PING

    - name: Check KeyDB TLS logs
      run: docker logs keydb-tls

    # - name: Check KeyDB TLS config
    #   run: |
    #     docker exec keydb-tls ls -lAh /etc/keydb/
    
    - name: Test KeyDB TLS Connectivity
      run: docker exec keydb-tls keydb-cli -h 127.0.0.1 -p 6391 --tls --cert /tls/test.crt --key /tls/test.key --cacert /tls/ca.crt PING

    - name: Check Dragonfly TLS logs
      run: docker logs dragonfly-tls

    # - name: Check Dragonfly TLS config
    #   run: |
    #     docker exec dragonfly-tls ls -lAh /etc/dragonfly/
    
    - name: Test Dragonfly TLS Connectivity
      run: |
        docker exec dragonfly-tls redis-cli --help
        docker exec dragonfly-tls redis-cli -h 127.0.0.1 -p 6392 --cert /tls/test.crt --key /tls/test.key --cacert /tls/ca.crt PING

    - name: Install memtier_benchmark
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential autoconf automake libpcre3-dev libevent-dev pkg-config zlib1g-dev libssl-dev
        git clone https://github.com/RedisLabs/memtier_benchmark.git
        cd memtier_benchmark
        autoreconf -ivf
        ./configure
        make
        sudo make install

    - name: Create Benchmark Logs Directory
      run: mkdir -p ./benchmarklogs

    - name: Memtier 1 Threads Benchmark Redis
      run: memtier_benchmark -s 127.0.0.1 -p 6379 --protocol=redis -t 1 --hide-histogram --requests=20000 --clients=100 --pipeline=20 --data-size=128 | tee ./benchmarklogs/redis_benchmarks_1threads.txt || true

    - name: Memtier 1 Threads Benchmark KeyDB
      run: memtier_benchmark -s 127.0.0.1 -p 6380 --protocol=redis -t 1 --hide-histogram --requests=20000 --clients=100 --pipeline=20 --data-size=128 | tee ./benchmarklogs/keydb_benchmarks_1threads.txt || true

    - name: Memtier 1 Threads Benchmark Dragonfly
      run: memtier_benchmark -s 127.0.0.1 -p 6381 --protocol=redis -t 1 --hide-histogram --requests=20000 --clients=100 --pipeline=20 --data-size=128 | tee ./benchmarklogs/dragonfly_benchmarks_1threads.txt || true

    - name: Memtier 2 Threads Benchmark Redis
      run: memtier_benchmark -s 127.0.0.1 -p 6379 --protocol=redis -t 2 --hide-histogram --requests=20000 --clients=100 --pipeline=20 --data-size=128 | tee ./benchmarklogs/redis_benchmarks_2threads.txt || true

    - name: Memtier 2 Threads Benchmark KeyDB
      run: memtier_benchmark -s 127.0.0.1 -p 6380 --protocol=redis -t 2 --hide-histogram --requests=20000 --clients=100 --pipeline=20 --data-size=128 | tee ./benchmarklogs/keydb_benchmarks_2threads.txt || true

    - name: Memtier 2 Threads Benchmark Dragonfly
      run: memtier_benchmark -s 127.0.0.1 -p 6381 --protocol=redis -t 2 --hide-histogram --requests=20000 --clients=100 --pipeline=20 --data-size=128 | tee ./benchmarklogs/dragonfly_benchmarks_2threads.txt || true

    - name: Memtier 4 Threads Benchmark Redis
      run: memtier_benchmark -s 127.0.0.1 -p 6379 --protocol=redis -t 4 --hide-histogram --requests=20000 --clients=100 --pipeline=20 --data-size=128 | tee ./benchmarklogs/redis_benchmarks_4threads.txt || true

    - name: Memtier 4 Threads Benchmark KeyDB
      run: memtier_benchmark -s 127.0.0.1 -p 6380 --protocol=redis -t 4 --hide-histogram --requests=20000 --clients=100 --pipeline=20 --data-size=128 | tee ./benchmarklogs/keydb_benchmarks_4threads.txt || true

    - name: Memtier 4 Threads Benchmark Dragonfly
      run: memtier_benchmark -s 127.0.0.1 -p 6381 --protocol=redis -t 4 --hide-histogram --requests=20000 --clients=100 --pipeline=20 --data-size=128 | tee ./benchmarklogs/dragonfly_benchmarks_4threads.txt || true

    - name: Memtier 1 Threads Benchmark Redis with TLS
      run: |
        memtier_benchmark -s 127.0.0.1 -p 6390 --protocol=redis --tls --cert=${PWD}/test.crt --key=${PWD}/test.key --cacert=${PWD}/ca.crt -t 1 --hide-histogram --requests=20000 --clients=100 --pipeline=20 --data-size=128 | tee ./benchmarklogs/redis_benchmarks_1threads_tls.txt || true
    
    - name: Memtier 1 Threads Benchmark KeyDB with TLS
      run: |
        memtier_benchmark -s 127.0.0.1 -p 6391 --protocol=redis --tls --cert=${PWD}/test.crt --key=${PWD}/test.key --cacert=${PWD}/ca.crt -t 1 --hide-histogram --requests=20000 --clients=100 --pipeline=20 --data-size=128 | tee ./benchmarklogs/keydb_benchmarks_1threads_tls.txt || true
    
    - name: Memtier 1 Threads Benchmark Dragonfly with TLS
      run: |
        memtier_benchmark -s 127.0.0.1 -p 6392 --protocol=redis --tls --cert=${PWD}/test.crt --key=${PWD}/test.key --cacert=${PWD}/ca.crt -t 1 --hide-histogram --requests=20000 --clients=100 --pipeline=20 --data-size=128 | tee ./benchmarklogs/dragonfly_benchmarks_1threads_tls.txt || true
    
    - name: Memtier 2 Threads Benchmark Redis with TLS
      run: |
        memtier_benchmark -s 127.0.0.1 -p 6390 --protocol=redis --tls --cert=${PWD}/test.crt --key=${PWD}/test.key --cacert=${PWD}/ca.crt -t 2 --hide-histogram --requests=20000 --clients=100 --pipeline=20 --data-size=128 | tee ./benchmarklogs/redis_benchmarks_2threads_tls.txt || true
    
    - name: Memtier 2 Threads Benchmark KeyDB with TLS
      run: |
        memtier_benchmark -s 127.0.0.1 -p 6391 --protocol=redis --tls --cert=${PWD}/test.crt --key=${PWD}/test.key --cacert=${PWD}/ca.crt -t 2 --hide-histogram --requests=20000 --clients=100 --pipeline=20 --data-size=128 | tee ./benchmarklogs/keydb_benchmarks_2threads_tls.txt || true
    
    - name: Memtier 2 Threads Benchmark Dragonfly with TLS
      run: |
        memtier_benchmark -s 127.0.0.1 -p 6392 --protocol=redis --tls --cert=${PWD}/test.crt --key=${PWD}/test.key --cacert=${PWD}/ca.crt -t 2 --hide-histogram --requests=20000 --clients=100 --pipeline=20 --data-size=128 | tee ./benchmarklogs/dragonfly_benchmarks_2threads_tls.txt || true
    
    - name: Memtier 4 Threads Benchmark Redis with TLS
      run: |
        memtier_benchmark -s 127.0.0.1 -p 6390 --protocol=redis --tls --cert=${PWD}/test.crt --key=${PWD}/test.key --cacert=${PWD}/ca.crt -t 4 --hide-histogram --requests=20000 --clients=100 --pipeline=20 --data-size=128 | tee ./benchmarklogs/redis_benchmarks_4threads_tls.txt || true
    
    - name: Memtier 4 Threads Benchmark KeyDB with TLS
      run: |
        memtier_benchmark -s 127.0.0.1 -p 6391 --protocol=redis --tls --cert=${PWD}/test.crt --key=${PWD}/test.key --cacert=${PWD}/ca.crt -t 4 --hide-histogram --requests=20000 --clients=100 --pipeline=20 --data-size=128 | tee ./benchmarklogs/keydb_benchmarks_4threads_tls.txt || true
    
    - name: Memtier 4 Threads Benchmark Dragonfly with TLS
      run: |
        memtier_benchmark -s 127.0.0.1 -p 6392 --protocol=redis --tls --cert=${PWD}/test.crt --key=${PWD}/test.key --cacert=${PWD}/ca.crt -t 4 --hide-histogram --requests=20000 --clients=100 --pipeline=20 --data-size=128 | tee ./benchmarklogs/dragonfly_benchmarks_4threads_tls.txt || true

    - name: Convert Redis 1 Threads Benchmark to MD
      run: |
        python scripts/parse_memtier_to_md.py ./benchmarklogs/redis_benchmarks_1threads.txt Redis
        cat ./benchmarklogs/redis_benchmarks_1threads.md

    - name: Convert KeyDB 1 Threads Benchmark to MD
      run: |
        python scripts/parse_memtier_to_md.py ./benchmarklogs/keydb_benchmarks_1threads.txt KeyDB
        cat ./benchmarklogs/keydb_benchmarks_1threads.md

    - name: Convert Dragonfly 1 Threads Benchmark to MD
      run: |
        python scripts/parse_memtier_to_md.py ./benchmarklogs/dragonfly_benchmarks_1threads.txt Dragonfly
        cat ./benchmarklogs/dragonfly_benchmarks_1threads.md

    - name: Convert Redis 2 Threads Benchmark to MD
      run: |
        python scripts/parse_memtier_to_md.py ./benchmarklogs/redis_benchmarks_2threads.txt Redis
        cat ./benchmarklogs/redis_benchmarks_2threads.md

    - name: Convert KeyDB 2 Threads Benchmark to MD
      run: |
        python scripts/parse_memtier_to_md.py ./benchmarklogs/keydb_benchmarks_2threads.txt KeyDB
        cat ./benchmarklogs/keydb_benchmarks_2threads.md

    - name: Convert Dragonfly 2 Threads Benchmark to MD
      run: |
        python scripts/parse_memtier_to_md.py ./benchmarklogs/dragonfly_benchmarks_2threads.txt Dragonfly
        cat ./benchmarklogs/dragonfly_benchmarks_2threads.md

    - name: Convert Redis 4 Threads Benchmark to MD
      run: |
        python scripts/parse_memtier_to_md.py ./benchmarklogs/redis_benchmarks_4threads.txt Redis
        cat ./benchmarklogs/redis_benchmarks_4threads.md

    - name: Convert KeyDB 4 Threads Benchmark to MD
      run: |
        python scripts/parse_memtier_to_md.py ./benchmarklogs/keydb_benchmarks_4threads.txt KeyDB
        cat ./benchmarklogs/keydb_benchmarks_4threads.md

    - name: Convert Dragonfly 4 Threads Benchmark to MD
      run: |
        python scripts/parse_memtier_to_md.py ./benchmarklogs/dragonfly_benchmarks_4threads.txt Dragonfly
        cat ./benchmarklogs/dragonfly_benchmarks_4threads.md

    - name: Convert Redis 1 Threads Benchmark with TLS to MD
      run: |
        python scripts/parse_memtier_to_md.py ./benchmarklogs/redis_benchmarks_1threads_tls.txt "Redis TLS"
        cat ./benchmarklogs/redis_benchmarks_1threads_tls.md
    
    - name: Convert KeyDB 1 Threads Benchmark with TLS to MD
      run: |
        python scripts/parse_memtier_to_md.py ./benchmarklogs/keydb_benchmarks_1threads_tls.txt "KeyDB TLS"
        cat ./benchmarklogs/keydb_benchmarks_1threads_tls.md
    
    - name: Convert Dragonfly 1 Threads Benchmark with TLS to MD
      run: |
        python scripts/parse_memtier_to_md.py ./benchmarklogs/dragonfly_benchmarks_1threads_tls.txt "Dragonfly TLS"
        cat ./benchmarklogs/dragonfly_benchmarks_1threads_tls.md
    
    - name: Convert Redis 2 Threads Benchmark with TLS to MD
      run: |
        python scripts/parse_memtier_to_md.py ./benchmarklogs/redis_benchmarks_2threads_tls.txt "Redis TLS"
        cat ./benchmarklogs/redis_benchmarks_2threads_tls.md
    
    - name: Convert KeyDB 2 Threads Benchmark with TLS to MD
      run: |
        python scripts/parse_memtier_to_md.py ./benchmarklogs/keydb_benchmarks_2threads_tls.txt "KeyDB TLS"
        cat ./benchmarklogs/keydb_benchmarks_2threads_tls.md
    
    - name: Convert Dragonfly 2 Threads Benchmark with TLS to MD
      run: |
        python scripts/parse_memtier_to_md.py ./benchmarklogs/dragonfly_benchmarks_2threads_tls.txt "Dragonfly TLS"
        cat ./benchmarklogs/dragonfly_benchmarks_2threads_tls.md
    
    - name: Convert Redis 4 Threads Benchmark with TLS to MD
      run: |
        python scripts/parse_memtier_to_md.py ./benchmarklogs/redis_benchmarks_4threads_tls.txt "Redis TLS"
        cat ./benchmarklogs/redis_benchmarks_4threads_tls.md
    
    - name: Convert KeyDB 4 Threads Benchmark with TLS to MD
      run: |
        python scripts/parse_memtier_to_md.py ./benchmarklogs/keydb_benchmarks_4threads_tls.txt "KeyDB TLS"
        cat ./benchmarklogs/keydb_benchmarks_4threads_tls.md
    
    - name: Convert Dragonfly 4 Threads Benchmark with TLS to MD
      run: |
        python scripts/parse_memtier_to_md.py ./benchmarklogs/dragonfly_benchmarks_4threads_tls.txt "Dragonfly TLS"
        cat ./benchmarklogs/dragonfly_benchmarks_4threads_tls.md

    - name: Upload Benchmark Logs
      uses: actions/upload-artifact@v3
      with:
        name: benchmark_logs
        path: benchmarklogs/*

    - name: Cleanup
      run: |
        docker stop redis
        docker stop keydb
        docker stop dragonfly
        docker stop redis-tls
        docker stop keydb-tls
        docker stop dragonfly-tls